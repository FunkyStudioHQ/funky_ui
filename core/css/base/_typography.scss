$typography-font-family:            $base-font-family !default;
$typography-line-height:            $base-line-height !default;
$typography-color:                  $base-font-color !default;
$typography-headings-font-family:   $base-font-family !default;
$typography-headings-font-weight:   600 !default;
$typography-headings-line-height:   1.2 !default;
$typography-headings-transform:     capitalize !default;
$typography-link-color:             $base-links-color !default;
$typography-link-hover-color:       shade($action-color, 25%) !default;
$typography-link-font-weight:       bolder !default;
$typography-link-decoration:        none !default;

html {
  color: $typography-color;
  font-family: $typography-font-family;
  font-size: 100%;
  line-height: $typography-line-height;
}
// Headings
@for $i from 1 through 6 {
  .h--#{$i},
  h#{$i} {
    $index: $i;
    font-family: $typography-headings-font-family;
    font-weight: $typography-headings-font-weight;
    line-height: $typography-headings-line-height;
    text-transform: $typography-headings-transform;
    margin: 0 0 $small-spacing;
    font-size: modular-scale(6 - $index);
  }
}

p {
  margin: 0 0 $small-spacing;
}

a {
  color: $typography-link-color;
  font-weight: $typography-link-font-weight;
  text-decoration: $typography-link-decoration;
  transition: color $base-duration $base-timing;

  &:hover {
    color: $typography-link-hover-color;
    cursor: pointer;
  }

  &:focus {
    outline: $base-focus-outline;
    outline-offset: $base-focus-outline-offset;
  }
}

hr {
  @include _directional-property(border, null, 0 0 0 null);
  border-bottom: $base-border;
  margin: $base-spacing 0;
}

* {
  @include modifier(bold) {
    font-weight: bolder;
  }
}
// font size modifiers
@each $name, $value in $font-dimensions {
  .t--#{$name} {
    font-size: nth($value, 1);
  }
}
// Text alignments modifiers
@each $direction in $alignments {
  .t--#{$direction} {
    text-align: $direction;
  }
}
// Text colors modifiers
@each $name, $color in $palette {
  .t--#{$name}{
    color: nth($color, 1);
  }
}
